name: Java CI with Gradle

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 12345678
          MYSQL_DATABASE: actions_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-start-period=30s --health-timeout=5s --health-retries=3

    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/actions_test
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 12345678
      SPRING_JWT_SECRET: ${{ secrets.SPRING_JWT_SECRET }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_STACK_AUTO: ${{ secrets.AWS_STACK_AUTO }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

    permissions:
      pull-requests: write
      checks: write
      actions: read

    steps:
      # 1. Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Gradle Cache Restoration
      - name: Restore Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches/modules-2/files-2.1
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 3. JDK Setup
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 4. Build and Test with Gradle
      - name: Build and Test
        run: |
          ./gradlew clean build --no-daemon
          ./gradlew test --no-daemon

      # 5. Gradle Cache Save
      - name: Save Gradle cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches/modules-2/files-2.1
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 6. Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/reports/tests/test

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
